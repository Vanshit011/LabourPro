import { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom"; // ✅ import navigate
import jsPDF from "jspdf";
import autoTable from "jspdf-autotable";

const handleDownload = (salary, period) => {
  if (!salary || salary.message) return;

  const doc = new jsPDF();

  // Title
  doc.setFontSize(18);
  doc.text("LabourPro - Salary Slip", 14, 20);

  // Period info
  doc.setFontSize(12);
  doc.text(`Salary Period: ${salary.month || ""}/${salary.year || ""}`, 14, 30);

  // Table Data
  const tableColumn = ["Field", "Value"];
  const tableRows = [
    ["Manager Name", salary.workerName || 0],
    ["Manager ID", salary.managerId || 0],
    ["Base Salary", `₹${salary.baseSalary || "0"}`],
    ["Advance", `₹${salary.advance || "0"}`],
    ["Loan Taken", `₹${salary.loanTaken || "0"}`],
    ["Loan Paid", `₹${salary.loanPaid || "0"}`],
    ["Remaining Loan", `₹${salary.remainingLoan || "0"}`],
    ["Final Salary", `₹${salary.finalSalary || "0"}`],
  ];

  autoTable(doc, {
    head: [tableColumn],
    body: tableRows,
    startY: 40,
    theme: "grid",
    styles: { halign: "left", valign: "middle" },
  });

  // Footer
  doc.setFontSize(10);
  doc.text(
    "Generated by LabourPro - www.labourpro.in",
    14,
    doc.internal.pageSize.height - 10
  );

  // Save PDF
  doc.save(
    `SalarySlip_${period}_${salary.month || ""}_${salary.year || ""}.pdf`
  );
};

const WorkerDashboard = () => {
  const [salaryData, setSalaryData] = useState(null);
  const navigate = useNavigate(); // ✅ hook for redirect

  useEffect(() => {
    const storedSalary = localStorage.getItem("salaryData");
    if (storedSalary) {
      setSalaryData(JSON.parse(storedSalary));
    }
  }, []);

  const handleLogout = () => {
    localStorage.clear(); // ✅ clear all data (tokens, salary, etc.)
    navigate("/login"); // ✅ redirect to login page
  };

  return (
    <div className="p-8 max-w-4xl mx-auto relative">
      {/* ✅ Logout button */}
      <button
        onClick={handleLogout}
        className="absolute top-4 right-4 bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600"
      >
        Logout
      </button>

      <h1 className="text-3xl font-bold mb-6">worker Dashboard</h1>
      {salaryData ? (
        <div className="space-y-8">
          {/* Current Month Salary */}
          <div className="bg-white p-6 rounded-lg shadow-md">
            <h2 className="text-2xl font-semibold mb-4">
              Current Month Salary
            </h2>
            {salaryData.current.message ? (
              <p className="text-red-500">{salaryData.current.message}</p>
            ) : (
              <>
                <p>Manager Name: {salaryData.current.workerName || "0"}</p>
                <p>
                  Month/Year: {salaryData.current.month || "0"}/
                  {salaryData.current.year || "0"}
                </p>
                <p>Manager ID: {salaryData.current.managerId || "0"}</p>
                <p>Base Salary: ₹{salaryData.current.baseSalary || "0"}</p>
                <p>Advance: ₹{salaryData.current.advance || "0"}</p>
                <p>Loan Taken: ₹{salaryData.current.loanTaken || "0"}</p>
                <p>Loan Paid: ₹{salaryData.current.loanPaid || "0"}</p>
                <p>
                  Remaining Loan: ₹{salaryData.current.remainingLoan || "0"}
                </p>
                <p>Final Salary: ₹{salaryData.current.finalSalary || "0"}</p>
                <button
                  onClick={() => handleDownload(salaryData.current, "current")}
                  className="mt-4 bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600"
                >
                  Download Current Slip
                </button>
              </>
            )}
          </div>

          {/* Previous Month Salary */}
          <div className="bg-white p-6 rounded-lg shadow-md">
            <h2 className="text-2xl font-semibold mb-4">
              Previous Month Salary
            </h2>
            {salaryData.previous.message ? (
              <p className="text-red-500">{salaryData.previous.message}</p>
            ) : (
              <>
                <p>Manager Name: {salaryData.previous.workerName || 0}</p>
                <p>
                  Month/Year: {salaryData.previous.month || 0}/
                  {salaryData.previous.year || 0}
                </p>
                <p>Manager ID: {salaryData.previous.managerId || 0}</p>
                <p>Base Salary: ₹{salaryData.previous.baseSalary || 0}</p>
                <p>Advance: ₹{salaryData.previous.advance || 0}</p>
                <p>Loan Taken: ₹{salaryData.previous.loanTaken || 0}</p>
                <p>Loan Paid: ₹{salaryData.previous.loanPaid || 0}</p>
                <p>
                  Remaining Loan: ₹{salaryData.previous.remainingLoan || 0}
                </p>
                <p>Final Salary: ₹{salaryData.previous.finalSalary || 0}</p>
                <button
                  onClick={() =>
                    handleDownload(salaryData.previous, "previous")
                  }
                  className="mt-4 bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600"
                >
                  Download Previous Slip
                </button>
              </>
            )}
          </div>
        </div>
      ) : (
        <p>Loading salary data...</p>
      )}
    </div>
  );
};

export default WorkerDashboard;
